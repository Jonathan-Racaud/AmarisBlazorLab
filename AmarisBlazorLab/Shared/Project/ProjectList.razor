@inject ProjectService Service

<Heading Size="HeadingSize.Is3">All projects</Heading>

@if (Projects.Count == 0)
{
    <Alert Color="Color.Info" Visible="true">
        <AlertMessage>There's no project.</AlertMessage>
        <AlertDescription>
            <AuthorizeView Roles="Admin">
                <Authorized>
                    <a href="/administrations/project" class="btn btn-link">Create a project</a>
                </Authorized>
                <NotAuthorized>
                    You can ask an administrator to create a project.
                </NotAuthorized>
            </AuthorizeView>
        </AlertDescription>
    </Alert>
}
else
{
    <ListGroup>
        @foreach (var project in Projects)
        {
            <ListGroupItem>
                <Container Fluid="true">
                    <Row>
                        <Column ColumnSize="ColumnSize.Is10">
                            @project.Name
                        </Column>
                        <Column ColumnSize="ColumnSize.Is1">
                            <Buttons>
                                <AuthorizeView Roles="Admin">
                                    @*There's an issue with intellisense as Link must be an ambiguous tag*@
                                    <Blazorise.Link To='@($"/administration/project&project_id={project.Id}")' Class="btn">
                                        <Icon Name="IconName.Edit" />
                                    </Blazorise.Link>
                                </AuthorizeView>
                                <Blazorise.Link To='@($"/project/{project.Id}")' Class="btn">
                                    <Icon Name="IconName.Eye" />
                                </Blazorise.Link>
                            </Buttons>
                        </Column>
                    </Row>
                </Container>
            </ListGroupItem>
        }
    </ListGroup>
}

@code {
    List<Project> Projects = new List<Project>();

    protected override void OnInitialized()
    {
        base.OnInitialized();

        Projects = Service.GetAll();
    }
}