@inject UserService Service

<Heading Size="HeadingSize.Is3">All users</Heading>

@if (Users.Count == 0)
{
    <Alert>
        <AlertMessage>Error getting the list of users.</AlertMessage>
    </Alert>
}
else
{
    <button class="btn btn-primary" @onclick="Reload">Refresh</button>
    <ListGroup>
        @foreach (var user in Users)
        {
            <ListGroupItem>
                <Container Fluid="true">
                    <Row Class="justify-content-between">
                        <Column ColumnSize="ColumnSize.Is2" Class="align-self-center">
                            @if (user.Roles.Contains("Admin"))
                            {
                                <Badge Color="Color.Info">Admin</Badge>
                            }
                        </Column>
                        <Column ColumnSize="ColumnSize.Is8" Class="d-flex justify-content-start align-self-center">
                            @user.Email
                        </Column>
                        <Column ColumnSize="ColumnSize.Is2" Class="d-flex justify-content-end align-self-center">
                            <Buttons>
                                <Blazorise.Link To='@($"/user/{user.Id}")' Class="btn">
                                    <Icon Name="IconName.Eye" />
                                </Blazorise.Link>
                            </Buttons>  
                        </Column>
                    </Row>
                </Container>
            </ListGroupItem>
        }
    </ListGroup>
}

@code {
    List<User> Users;

    protected override void OnInitialized()
    {
        Service.Messages.OnUserCreated += () => 
        {
            InvokeAsync(this.Reload);
        };

        Users = Service.GetAllWithRoles();
    }

    public void Reload()
    {
        Users = Service.GetAllWithRoles();
        StateHasChanged();
    }
}
